{"version":3,"sources":["images/logo.svg","contexts/CurrentUserContext.js","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/api.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","CurrentUserContext","React","createContext","Header","className","src","headerLogo","alt","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","key","type","aria-label","onClick","link","name","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","Footer","Date","getFullYear","PopupWithForm","title","children","button","isOpen","onClose","onSubmit","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","value","minLength","maxLength","required","placeholder","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarInput","useRef","current","reset","ref","AddPlacePopup","nameInput","linkInput","data","ImagePopup","Object","keys","api","url","headers","this","_url","_headers","fetch","method","then","res","ok","json","Promise","reject","status","all","getItems","getUserInfo","body","JSON","stringify","like","authorization","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCards","closeAllPopups","getAllNeedData","cardData","userData","catch","err","console","log","Provider","toggleLikes","newCard","newCards","c","removeCard","filter","editUserInfo","newUserData","editAvatar","newAvatar","addnewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,kC,oKCC9BC,EAAqBC,IAAMC,gB,kBCUzBC,MARf,WACE,OACE,4BAAQC,UAAU,wBAChB,yBAAKA,UAAU,eAAeC,IAAKC,IAAYC,IAAI,0ECyB1CC,MA5Bf,YAAgE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aACrCC,EAAcZ,IAAMa,WAAWd,GAC/Be,EAAQN,EAAKO,MAAMC,MAAQJ,EAAYI,IACvCC,EAAUT,EAAKU,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAU3D,OACI,yBAAKb,UAAU,QAAQkB,IAAKb,EAAKQ,KAC5BF,GAAS,4BAAQX,UAAU,gBAAgBmB,KAAK,SAASC,aAAW,6CAAUC,QALvF,WACIb,EAAaH,MAKT,yBAAKL,UAAU,eAAeC,IAAKI,EAAKiB,KAAMnB,IAAI,GAAGkB,QAZ7D,WACIf,EAAYD,MAYR,yBAAKL,UAAU,eACX,wBAAIA,UAAU,gBAAgBK,EAAKkB,MACnC,yBAAKvB,UAAU,QACX,4BAAQA,UAAYc,EAA0B,qBAAhB,cAAsCK,KAAK,SAASC,aAAW,mDAAWC,QAbxH,WACId,EAAWF,MAaC,0BAAML,UAAU,qBAAqBK,EAAKU,MAAMS,YCIrDC,MAxBf,YAA0G,IAA1FC,EAAyF,EAAzFA,aAAcC,EAA2E,EAA3EA,cAAeC,EAA4D,EAA5DA,WAAYtB,EAAgD,EAAhDA,YAAauB,EAAmC,EAAnCA,MAAOtB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAC/EC,EAAcZ,IAAMa,WAAWd,GACrC,OACI,oCACI,6BAASI,UAAU,yBACf,yBAAKA,UAAU,uBAAuBqB,QAASK,GAC3C,yBAAK1B,UAAU,kBAAkBC,IAAKQ,EAAYqB,OAAQ3B,IAAI,OAElE,yBAAKH,UAAU,iBACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,iBAAiBS,EAAYc,MAC3C,4BAAQvB,UAAU,uBAAuBmB,KAAK,SAASC,aAAW,iFAAgBC,QAASM,KAE/F,uBAAG3B,UAAU,kBAAkBS,EAAYsB,QAE/C,4BAAQ/B,UAAU,sBAAsBmB,KAAK,SAASC,aAAW,mDAAWC,QAASO,KAEzF,yBAAK5B,UAAU,wBACV6B,EAAMG,KAAI,SAAC3B,GAAD,OAAW,kBAAC,EAAD,CAAMa,IAAKb,EAAKQ,IAAKR,KAAMA,EAAMC,YAAaA,EAAaC,WAAYA,EAAYC,aAAcA,UCXxHyB,MARf,WACE,OACE,4BAAQjC,UAAU,wBAChB,uBAAGA,UAAU,qBAAb,SAA0C,IAAIkC,MAAOC,cAArD,mBCYSC,MAjBf,YAGI,IAFFC,EAEC,EAFDA,MAAOd,EAEN,EAFMA,KACPe,EACC,EADDA,SAAUC,EACT,EADSA,OAAQC,EACjB,EADiBA,OAAQC,EACzB,EADyBA,QAASC,EAClC,EADkCA,SAEnC,OACE,yBAAK1C,UAAS,2BAAsBuB,EAAtB,YAA8BiB,IAC1C,yBAAKxC,UAAU,oBACb,4BAAQA,UAAU,eAAemB,KAAK,SAASC,aAAW,6CAAUC,QAASoB,IAC7E,wBAAIzC,UAAU,gBAAgBqC,GAC9B,0BAAMrC,UAAU,cAAcuB,KAAMA,EAAOmB,SAAUA,GAClDJ,EACD,4BAAQtC,UAAU,gBAAgBmB,KAAK,UAAUoB,OC+B5CI,MAvCR,YAA8D,IAAlCH,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,QAASG,EAAgB,EAAhBA,aAAgB,EACxC/C,IAAMgD,SAAS,IADyB,mBACzDtB,EADyD,KACnDuB,EADmD,OAE1BjD,IAAMgD,SAAS,IAFW,mBAEzDE,EAFyD,KAE5CC,EAF4C,KAG1DvC,EAAcZ,IAAMa,WAAWd,GAoBrC,OAnBAC,IAAMoD,WAAU,WACZH,EAAQrC,EAAYc,MACpByB,EAAevC,EAAYsB,SAC5B,CAACtB,IAiBA,kBAAC,EAAD,CAAec,KAAK,UAAUc,MAAM,4HAAwBE,OAAO,yDAAYC,OAAQA,EAAS,aAAe,GAAIC,QAASA,EAASC,SARzI,SAAsBQ,GAClBA,EAAEC,iBACFP,EAAa,CACTrB,OACAQ,MAAOgB,MAKP,2BAAO/C,UAAU,gBACb,2BAAOmB,KAAK,OAAOiC,GAAG,OAAO7B,KAAK,OAAO8B,MAAO9B,GAAQ,GAAIvB,UAAU,sCAAsCsD,UAAU,IAClHC,UAAU,KAAKC,UAAQ,EAACC,YAAY,qBAAMC,SAlB1D,SAA0BR,GACtBJ,EAAQI,EAAES,OAAON,UAkBT,0BAAMD,GAAG,aAAapD,UAAU,kBAEpC,2BAAOA,UAAU,gBACb,2BAAOmB,KAAK,OAAOiC,GAAG,QAAQ7B,KAAK,QAAQ8B,MAAON,GAAe,GAAI/C,UAAU,uCAAuCsD,UAAU,IAC5HC,UAAU,MAAMC,UAAQ,EAACC,YAAY,kCAASC,SAnB9D,SAAiCR,GAC7BF,EAAeE,EAAES,OAAON,UAmBhB,0BAAMD,GAAG,cAAcpD,UAAU,oBCdlC4D,MApBR,YAA+D,IAApCpB,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASoB,EAAkB,EAAlBA,eAC3CC,EAAcC,iBAAO,MAQ3B,OACE,kBAAC,EAAD,CAAexC,KAAK,SAASc,MAAM,wFAAkBE,OAAO,yDAAYC,OAAQA,EAAS,aAAe,GAAIC,QAASA,EAASC,SARhI,SAAsBQ,GACpBA,EAAEC,iBACFU,EAAe,CACb/B,OAAQgC,EAAYE,QAAQX,QAE9BH,EAAES,OAAOM,UAIP,2BAAOjE,UAAU,gBACf,2BAAOmB,KAAK,MAAMiC,GAAG,cAAcc,IAAKJ,EAAavC,KAAK,SAASvB,UAAU,6CAC3EwD,UAAQ,EAACC,YAAY,kGACvB,0BAAML,GAAG,oBAAoBpD,UAAU,oBCehCmE,MA7BR,YAAyD,IAAhC3B,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,QAASb,EAAc,EAAdA,WACvCwC,EAAYL,iBAAO,MACnBM,EAAYN,iBAAO,MAWzB,OACI,kBAAC,EAAD,CAAexC,KAAK,WAAWc,MAAM,gEAAcE,OAAO,6CAAUC,OAAQA,EAAS,aAAe,GAAIC,QAASA,EAASC,SAX9H,SAAsBQ,GAClBA,EAAEC,iBACF,IAAMmB,EAAO,CACT/C,KAAM6C,EAAUJ,QAAQX,MACxB/B,KAAM+C,EAAUL,QAAQX,OAE5BzB,EAAW0C,GACXpB,EAAES,OAAOM,UAKL,2BAAOjE,UAAU,gBACb,2BAAOmB,KAAK,OAAO+C,IAAKE,EAAWhB,GAAG,aAAa7B,KAAK,OAAOvB,UAAU,4CACrEsD,UAAU,IAAIC,UAAU,KAAKC,UAAQ,EAACC,YAAY,qDACtD,0BAAML,GAAG,mBAAmBpD,UAAU,kBAE1C,2BAAOA,UAAU,gBACb,2BAAOmB,KAAK,MAAM+C,IAAKG,EAAWjB,GAAG,OAAO7B,KAAK,OAAOvB,UAAU,sCAAsCwD,UAAQ,EAC5GC,YAAY,kGAChB,0BAAML,GAAG,aAAapD,UAAU,oBCRjCuE,MAff,YAAwC,IAAlBlE,EAAiB,EAAjBA,KAAMoC,EAAW,EAAXA,QAExB,OACI,yBAAKzC,UAAS,gCAA2BwE,OAAOC,KAAKpE,GAAMmB,OAAS,EAAI,aAAe,KACnF,yBAAKxB,UAAU,yBACX,4BAAQA,UAAU,iCAAiCmB,KAAK,SAASC,aAAW,6CAAUC,QAASoB,IAC/F,gCACI,yBAAKzC,UAAU,eAAeC,IAAKI,EAAKiB,KAAMnB,IAAI,uEAClD,gCAAYH,UAAU,kBAAkBK,EAAKkB,U,0BCmGlDmD,EAPH,IArGZ,WACI,cAA+B,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QAAW,oBAC1BC,KAAKC,KAAOH,EACZE,KAAKE,SAAWH,EAHxB,uDAMQ,OAAOI,MAAMH,KAAKC,KAAM,CACpBG,OAAQ,MACRL,QAASC,KAAKE,WACfG,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,UAAQC,OAAR,gDAA0BJ,EAAIK,cAbjD,oCAkBQ,OAAOR,MAAM,uDAAwD,CACjEC,OAAQ,MACRL,QAASC,KAAKE,WACfG,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,UAAQC,OAAR,gDAA0BJ,EAAIK,cAzBjD,uCA6BQ,OAAOF,UAAQG,IAAI,CAACZ,KAAKa,WAAYb,KAAKc,kBA7BlD,mCA+BiBrB,GACT,OAAOU,MAAM,uDAAwD,CACjEC,OAAQ,QACRL,QAASC,KAAKE,SACda,KAAMC,KAAKC,UAAU,CACjBvE,KAAM+C,EAAK/C,KACXQ,MAAOuC,EAAKvC,UAEjBmD,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,UAAQC,OAAR,gDAA0BJ,EAAIK,cA3CjD,iCA+CelE,GACP,OAAO0D,MAAM,8DAA+D,CACxEC,OAAQ,QACRL,QAASC,KAAKE,SACda,KAAMC,KAAKC,UAAU,CACjBhE,OAAQR,EAAKQ,WAElBoD,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,UAAQC,OAAR,gDAA0BJ,EAAIK,cA1DjD,iCA6DelB,GACP,OAAOU,MAAMH,KAAKC,KAAM,CACpBG,OAAQ,OACRL,QAASC,KAAKE,SACda,KAAMC,KAAKC,UAAU,CACjBvE,KAAM+C,EAAK/C,KACXD,KAAMgD,EAAKhD,SAEhB4D,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,UAAQC,OAAR,gDAA0BJ,EAAIK,cAzEjD,iCA4EepC,GACP,OAAO4B,MAAM,GAAD,OAAIH,KAAKC,KAAT,YAAiB1B,GAAM,CAC/B6B,OAAQ,SACRL,QAASC,KAAKE,WACfG,MAAK,SAACC,GAEL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,UAAQC,OAAR,gDAA0BJ,EAAIK,cArFjD,kCAwFgBpC,EAAI2C,GACZ,OAAOf,MAAM,2DAAD,OAA4D5B,GAAM,CAC1E6B,OAAQc,EAAO,MAAQ,SACvBnB,QAASC,KAAKE,WACfG,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,UAAQC,OAAR,gDAA0BJ,EAAIK,gBAhGjD,KAqGY,CAAQ,CAChBb,IAAK,oDACLC,QAAS,CACLoB,cAAe,uCACf,eAAgB,sBCPTC,MAvFf,WAAgB,IAAD,EACyBpG,IAAMgD,SAAS,IADxC,mBACNpC,EADM,KACOyF,EADP,OAE6CrG,IAAMgD,WAFnD,mBAENsD,EAFM,KAEiBC,EAFjB,OAG+CvG,IAAMgD,WAHrD,mBAGNwD,EAHM,KAGkBC,EAHlB,OAIyCzG,IAAMgD,WAJ/C,mBAIN0D,EAJM,KAIeC,EAJf,OAK2B3G,IAAMgD,SAAS,IAL1C,mBAKN4D,EALM,KAKQC,EALR,OAMa7G,IAAMgD,SAAS,IAN5B,mBAMNhB,EANM,KAMC8E,EAND,KAgEb,SAASC,IACPR,GAAyB,GACzBE,GAA0B,GAC1BE,GAAuB,GACvBE,GAAgB,GAGlB,OA/DA7G,IAAMoD,WAAU,WACdyB,EAAImC,iBAAiB3B,MAAK,YAA2B,IAAD,mBAAxB4B,EAAwB,KAAdC,EAAc,KAClDb,EAAea,GACfJ,EAASG,MACRE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAR,gDAAuBF,SACxC,IA2DD,kBAACrH,EAAmBwH,SAApB,CAA6B/D,MAAO5C,GAClC,yBAAKT,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAM2B,cArBZ,WACE2E,GAA0B,IAoBuB1E,WAlBnD,WACE4E,GAAuB,IAiB2D9E,aAxBpF,WACE0E,GAAyB,IAuB8F9F,YAfzH,SAAyBD,GACvBqG,EAAgBrG,IAcqIwB,MAAOA,EAAOtB,WAtCrK,SAAwBF,GACtB,IAAMS,EAAUT,EAAKU,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAC3D6D,EAAI2C,YAAYhH,EAAKQ,KAAMC,GAASoE,MAAK,SAACoC,GACxC,IAAMC,EAAW1F,EAAMG,KAAI,SAACwF,GAAD,OAAOA,EAAE3G,MAAQR,EAAKQ,IAAMyG,EAAUE,KACjEb,EAASY,MACRP,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAR,gDAAuBF,QAiCsJzG,aA9BjM,SAA0BH,GACxBqE,EAAI+C,WAAWpH,EAAKQ,KAAKqE,MAAK,WAC5B,IAAMqC,EAAW1F,EAAM6F,QAAO,SAACF,GAAD,OAAOA,EAAE3G,MAAQR,EAAKQ,OACpD8F,EAASY,MACRP,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAR,gDAAuBF,UA2BrC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAkBzE,OAAQ6D,EAAwB5D,QAASmE,EAAgBhE,aAtDjF,YAA4C,IAAhBrB,EAAe,EAAfA,KAAMQ,EAAS,EAATA,MAChC2C,EAAIiD,aAAa,CAAEpG,OAAMQ,UAASmD,MAAK,SAAC0C,GACtC1B,EAAe0B,MACdZ,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAR,gDAAuBF,OACzCL,OAmDI,kBAAC,EAAD,CAAiBpE,OAAQ2D,EAAuB1D,QAASmE,EAAgB/C,eAhD/E,YAAyC,IAAX/B,EAAU,EAAVA,OAC5B4C,EAAImD,WAAW,CAAE/F,WAAUoD,MAAK,SAAC4C,GAC/B5B,EAAe4B,MACdd,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAR,gDAAuBF,OACzCL,OA6CI,kBAAC,EAAD,CAAepE,OAAQ+D,EAAqB9D,QAASmE,EAAgBhF,WA/D3E,SAA8B0C,GAC5BI,EAAIqD,WAAWzD,GAAMY,MAAK,SAACoC,GACzBX,EAAS,CAACW,GAAF,mBAAczF,QACrBmF,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAR,gDAAuBF,OACzCL,OA4DI,kBAAC,EAAD,CAAerF,KAAK,SAASc,MAAM,2DAAcE,OAAO,iBACxD,kBAAC,EAAD,CAAYlC,KAAMoG,EAAchE,QAASmE,OClF7BoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1D,MAAK,SAAA2D,GACJA,EAAaC,gBAEd9B,OAAM,SAAA+B,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.d4e88143.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport headerLogo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header page__content\">\r\n      <img className=\"header__logo\" src={headerLogo} alt=\"места России\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = card.owner._id === currentUser._id;\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n    function handleLikeClick() {\r\n        onCardLike(card);\r\n    }\r\n    function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n    return (\r\n        <div className=\"place\" key={card._id}>\r\n            {isOwn && <button className=\"place__remove\" type=\"button\" aria-label=\"Удалить\" onClick={handleDeleteClick} ></button>}\r\n            <img className=\"place__image\" src={card.link} alt=\"\" onClick={handleClick} />\r\n            <div className=\"place__text\">\r\n                <h2 className=\"place__title\">{card.name}</h2>\r\n                <div className=\"like\">\r\n                    <button className={!isLiked ? \"place__like\" : \"place__like_active\"} type=\"button\" aria-label=\"Нравится\" onClick={handleLikeClick} ></button>\r\n                    <span className=\"place__like-count\">{card.likes.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick, cards, onCardLike, onCardDelete }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    return (\r\n        <>\r\n            <section className=\"profile page__content\">\r\n                <div className=\"profile__edit-avatar\" onClick={onEditAvatar}>\r\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"#\" />\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__conteiner\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button className=\"profile__button-edit\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__about\">{currentUser.about}</p>\r\n                </div>\r\n                <button className=\"profile__button-add\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace}></button>\r\n            </section>\r\n            <div className=\"places page__content\">\r\n                {cards.map((card) => (<Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer page__content\">\r\n      <p className=\"footer__copyright\">&copy; {(new Date().getFullYear())} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nfunction PopupWithForm({\r\n  title, name,\r\n  children, button, isOpen, onClose, onSubmit\r\n}) {\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen}`}>\r\n      <div className=\"popup__conteiner\">\r\n        <button className=\"popup__close\" type=\"button\" aria-label=\"Закрыть\" onClick={onClose}></button>\r\n        <h3 className=\"popup__title\">{title}</h3>\r\n        <form className=\"popup__form\" name={name}  onSubmit={onSubmit}>\r\n          {children}\r\n          <button className=\"popup__button\" type=\"submit\">{button}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nexport function EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n    const [name, setName] = React.useState(\"\");\r\n    const [description, setDescription] = React.useState(\"\");\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value)\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n            name,\r\n            about: description,\r\n        });\r\n    }\r\n    return (\r\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" button=\"Сохранить\" isOpen={isOpen ? \"popup_open\" : \"\"} onClose={onClose} onSubmit={handleSubmit}>\r\n            <label className=\"popup__label\">\r\n                <input type=\"text\" id=\"name\" name=\"name\" value={name || ''} className=\"popup__input popup__input_type_name\" minLength=\"2\"\r\n                    maxLength=\"40\" required placeholder=\"Имя\" onChange={handleChangeName} />\r\n                <span id=\"name-error\" className=\"popup__error\"></span>\r\n            </label>\r\n            <label className=\"popup__label\">\r\n                <input type=\"text\" id=\"about\" name=\"about\" value={description || ''} className=\"popup__input popup__input_type_about\" minLength=\"2\"\r\n                    maxLength=\"200\" required placeholder=\"О себе\" onChange={handleChangeDescription} />\r\n                <span id=\"about-error\" className=\"popup__error\"></span>\r\n            </label>\r\n        </PopupWithForm>\r\n    )\r\n\r\n}\r\nexport default EditProfilePopup;","import React, { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport function EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const avatarInput = useRef(null)\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar: avatarInput.current.value\r\n    });\r\n    e.target.reset();\r\n  }\r\n  return (\r\n    <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" button=\"Сохранить\" isOpen={isOpen ? \"popup_open\" : \"\"} onClose={onClose} onSubmit={handleSubmit}>\r\n      <label className=\"popup__label\">\r\n        <input type=\"url\" id=\"link-avatar\" ref={avatarInput} name=\"avatar\" className=\"popup__input popup__input_type_link-avatar\"\r\n          required placeholder=\"Cсылка на картинку\" />\r\n        <span id=\"link-avatar-error\" className=\"popup__error\"></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n\r\n}\r\nexport default EditAvatarPopup;","import React, { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport function AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n    const nameInput = useRef(null)\r\n    const linkInput = useRef(null)\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const data = {\r\n            name: nameInput.current.value,\r\n            link: linkInput.current.value\r\n        }\r\n        onAddPlace(data);\r\n        e.target.reset();\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"add-card\" title=\"Новое место\" button=\"Создать\" isOpen={isOpen ? \"popup_open\" : \"\"} onClose={onClose} onSubmit={handleSubmit}>\r\n            <label className=\"popup__label\">\r\n                <input type=\"text\" ref={nameInput} id=\"place-name\" name=\"name\" className=\"popup__input popup__input_type_place-name\"\r\n                    minLength=\"1\" maxLength=\"30\" required placeholder=\"Название\" />\r\n                <span id=\"place-name-error\" className=\"popup__error\"></span>\r\n            </label>\r\n            <label className=\"popup__label\">\r\n                <input type=\"url\" ref={linkInput} id=\"link\" name=\"link\" className=\"popup__input popup__input_type_link\" required\r\n                    placeholder=\"Cсылка на картинку\" />\r\n                <span id=\"link-error\" className=\"popup__error\"></span>\r\n            </label>\r\n        </PopupWithForm>\r\n    )\r\n\r\n}\r\nexport default AddPlacePopup;","import React from 'react';\r\n\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n\r\n    return (\r\n        <div className={`popup popup_type_view ${Object.keys(card).length > 0 ? \"popup_open\" : \"\"}`} >\r\n            <div className=\"popup__container-view\">\r\n                <button className=\"popup__close popup__close_view\" type=\"button\" aria-label=\"Закрыть\" onClick={onClose}></button>\r\n                <figure>\r\n                    <img className=\"popup__image\" src={card.link} alt=\"изображение\" />\r\n                    <figcaption className=\"popup__caption\">{card.name}</figcaption>\r\n                </figure>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import { Promise } from \"core-js\";\r\n\r\nexport class Api {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n    getItems() {\r\n        return fetch(this._url, {\r\n            method: \"GET\",\r\n            headers: this._headers\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        });\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-15/users/me', {\r\n            method: \"GET\",\r\n            headers: this._headers\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n    }\r\n    getAllNeedData() {\r\n        return Promise.all([this.getItems(), this.getUserInfo()])\r\n    }\r\n    editUserInfo(data) {\r\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-15/users/me', {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n\r\n    }\r\n    editAvatar(link) {\r\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-15/users/me/avatar', {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: link.avatar\r\n            })\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n    }\r\n    addnewCard(data) {\r\n        return fetch(this._url, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n    }\r\n    removeCard(id) {\r\n        return fetch(`${this._url}/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers,\r\n        }).then((res) => {\r\n\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        });\r\n    }\r\n    toggleLikes(id, like) {\r\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-15/cards/likes/${id}`, {\r\n            method: like ? 'PUT' : 'DELETE',\r\n            headers: this._headers,\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-15/cards',\r\n    headers: {\r\n        authorization: '26d86045-320c-4f7c-aeb9-3bada9d26c3e',\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\nexport default api;","import React from 'react';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState();\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState();\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  // Загрузка начальных данных\n  React.useEffect(() => {\n    api.getAllNeedData().then(([cardData, userData]) => {\n      setCurrentUser(userData);\n      setCards(cardData)\n    }).catch((err) => console.log(`Ошибка: ${err}`))\n  }, [])\n\n  // Добавление новой карточки\n  function handleAddPlaceSubmit(data) {\n    api.addnewCard(data).then((newCard) => {\n      setCards([newCard, ...cards])\n    }).catch((err) => console.log(`Ошибка: ${err}`))\n    closeAllPopups()\n  }\n  // Редактирование профиля\n  function handleUpdateUser({ name, about }) {\n    api.editUserInfo({ name, about }).then((newUserData) => {\n      setCurrentUser(newUserData);\n    }).catch((err) => console.log(`Ошибка: ${err}`))\n    closeAllPopups()\n  }\n  // Редактирование аватара\n  function handleUpdateAvatar({ avatar }) {\n    api.editAvatar({ avatar }).then((newAvatar) => {\n      setCurrentUser(newAvatar);\n    }).catch((err) => console.log(`Ошибка: ${err}`))\n    closeAllPopups()\n  }\n  // Лайк карточек\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.toggleLikes(card._id, !isLiked).then((newCard) => {\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch((err) => console.log(`Ошибка: ${err}`))\n  }\n  // Удаление карточки\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      const newCards = cards.filter((c) => c._id !== card._id)\n      setCards(newCards)\n    }).catch((err) => console.log(`Ошибка: ${err}`))\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Header />\n        <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n        <Footer />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n        <PopupWithForm name=\"delete\" title=\"Вы уверены?\" button=\"Да\"></PopupWithForm>\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}