{"version":3,"sources":["images/logo.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","headerLogo","alt","api","url","headers","this","_url","_headers","fetch","method","then","res","ok","json","Promise","reject","status","all","getItems","getUserInfo","data","body","JSON","stringify","name","about","link","avatar","id","like","authorization","Card","card","onCardClick","key","_id","type","aria-label","onClick","likes","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getAllNeedData","cardData","userData","map","length","catch","err","console","log","Footer","Date","getFullYear","PopupWithForm","title","children","button","isOpen","onClose","noValidate","ImagePopup","Object","keys","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","minLength","maxLength","required","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.058faf49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","import React from 'react';\r\nimport headerLogo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header page__content\">\r\n      <img className=\"header__logo\" src={headerLogo} alt=\"места России\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Promise } from \"core-js\";\r\n\r\nexport class Api {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n    getItems() {\r\n        return fetch(this._url, {\r\n            method: \"GET\",\r\n            headers: this._headers\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        });\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-15/users/me', {\r\n            method: \"GET\",\r\n            headers: this._headers\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n    }\r\n    getAllNeedData() {\r\n        return Promise.all([this.getItems(), this.getUserInfo()])\r\n    }\r\n    patchUserInfo(data) {\r\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-15/users/me', {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n\r\n    }\r\n    editAvatar(link) {\r\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-15/users/me/avatar', {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: link.avatar\r\n            })\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n    }\r\n    addnewCard(data) {\r\n        return fetch(this._url, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n    }\r\n    removeCard(id) {\r\n        return fetch(`${this._url}/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers,\r\n        }).then((res) => {\r\n\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        });\r\n    }\r\n    toggleLikes(id, like){\r\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-15/cards/likes/${id}`, {\r\n            method: like ? 'PUT' : 'DELETE',\r\n            headers: this._headers,\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-15/cards',\r\n    headers: {\r\n        authorization: '26d86045-320c-4f7c-aeb9-3bada9d26c3e',\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\nexport default api;","import React from 'react';\r\n\r\n\r\nfunction Card({ card, onCardClick }) {\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"place\" key={card._id}>\r\n            <button className=\"place__remove\" type=\"button\" aria-label=\"Удалить\"></button>\r\n            <img className=\"place__image\" src={card.link} alt=\"\" onClick={handleClick} />\r\n            <div className=\"place__text\">\r\n                <h2 className=\"place__title\">{card.name}</h2>\r\n                <div className=\"like\">\r\n                    <button className=\"place__like\" type=\"button\" aria-label=\"Нравится\"></button>\r\n                    <span className=\"place__like-count\">{card.likes}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\r\n    const [userName, setUserName] = React.useState();\r\n    const [userDescription, setUserDescription] = React.useState();\r\n    const [userAvatar, setUserAvatar] = React.useState();\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        api.getAllNeedData().then(([cardData, userData]) => {\r\n            const cards = cardData.map((card) => ({\r\n                likes: card.likes.length,\r\n                _id: card._id,\r\n                name: card.name,\r\n                link: card.link\r\n            }))\r\n            setCards(cards);\r\n            setUserName(userData.name);\r\n            setUserDescription(userData.about);\r\n            setUserAvatar(userData.avatar);\r\n        }).catch((err) => console.log(`Ошибка: ${err}`))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <section className=\"profile page__content\">\r\n                <div className=\"profile__edit-avatar\" onClick={onEditAvatar}>\r\n                    <img className=\"profile__avatar\" src={userAvatar} alt=\"#\" />\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__conteiner\">\r\n                        <h1 className=\"profile__name\">{userName}</h1>\r\n                        <button className=\"profile__button-edit\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__about\">{userDescription}</p>\r\n                </div>\r\n                <button className=\"profile__button-add\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace}></button>\r\n            </section>\r\n            <div className=\"places page__content\">\r\n                {cards.map((card) => <Card key={card._id} card={card} onCardClick={onCardClick} />)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer page__content\">\r\n      <p className=\"footer__copyright\">&copy; {(new Date().getFullYear())} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nfunction PopupWithForm({\r\n  title, name,\r\n  children, button, isOpen, onClose\r\n}) {\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen}`}>\r\n      <div className=\"popup__conteiner\">\r\n        <button className=\"popup__close\" type=\"button\" aria-label=\"Закрыть\" onClick={onClose}></button>\r\n        <h3 className=\"popup__title\">{title}</h3>\r\n        <form className=\"popup__form\" name={name} noValidate>\r\n          {children}\r\n          <button className=\"popup__button\" type=\"submit\">{button}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n\r\n    return (\r\n        <div className={`popup popup_type_view ${Object.keys(card).length > 0 ? \"popup_open\" : \"\"}`} >\r\n            <div className=\"popup__container-view\">\r\n                <button className=\"popup__close popup__close_view\" type=\"button\" aria-label=\"Закрыть\" onClick={onClose}></button>\r\n                <figure>\r\n                    <img className=\"popup__image\" src={card.link} alt=\"изображение\" />\r\n                    <figcaption className=\"popup__caption\">{card.name}</figcaption>\r\n                </figure>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState();\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState();\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\n      <Footer />\n      <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" button=\"Сохранить\" isOpen={isEditProfilePopupOpen ? \"popup_open\" : \"\"} onClose={closeAllPopups}>\n        <label className=\"popup__label\">\n          <input type=\"text\" id=\"name\" name=\"name\" className=\"popup__input popup__input_type_name\" minLength=\"2\"\n            maxLength=\"40\" required placeholder=\"Имя\" />\n          <span id=\"name-error\" className=\"popup__error\"></span>\n        </label>\n        <label className=\"popup__label\">\n          <input type=\"text\" id=\"about\" name=\"about\" className=\"popup__input popup__input_type_about\" minLength=\"2\"\n            maxLength=\"200\" required placeholder=\"О себе\" />\n          <span id=\"about-error\" className=\"popup__error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm name=\"add-card\" title=\"Новое место\" button=\"Создать\" isOpen={isAddPlacePopupOpen ? \"popup_open\" : \"\"} onClose={closeAllPopups}>\n        <label className=\"popup__label\">\n          <input type=\"text\" id=\"place-name\" name=\"name\" className=\"popup__input popup__input_type_place-name\"\n            minLength=\"1\" maxLength=\"30\" required placeholder=\"Название\" />\n          <span id=\"place-name-error\" className=\"popup__error\"></span>\n        </label>\n        <label className=\"popup__label\">\n          <input type=\"url\" id=\"link\" name=\"link\" className=\"popup__input popup__input_type_link\" required\n            placeholder=\"Cсылка на картинку\" />\n          <span id=\"link-error\" className=\"popup__error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" button=\"Сохранить\" isOpen={isEditAvatarPopupOpen ? \"popup_open\" : \"\"} onClose={closeAllPopups}>\n        <label className=\"popup__label\">\n          <input type=\"url\" id=\"link-avatar\" name=\"avatar\" className=\"popup__input popup__input_type_link-avatar\"\n            required placeholder=\"Cсылка на картинку\" />\n          <span id=\"link-avatar-error\" className=\"popup__error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm name=\"delete\" title=\"Вы уверены?\" button=\"Да\"></PopupWithForm>\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}